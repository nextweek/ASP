//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18051.
// 
#pragma warning disable 1591

namespace HtOne_v1.iPlanet {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceResourceImplServiceSoapBinding", Namespace="http://service.ws.ngoss.ht/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ipRange[]))]
    public partial class ServiceResourceImplService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback findByCustomerAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback findByCircuitIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback findByServiceTnOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiceResourceImplService() {
            this.Url = global::HtOne_v1.Properties.Settings.Default.HtOne_v1_iPlanet_ServiceResourceImplService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event findByCustomerAccountCompletedEventHandler findByCustomerAccountCompleted;
        
        /// <remarks/>
        public event findByCircuitIdCompletedEventHandler findByCircuitIdCompleted;
        
        /// <remarks/>
        public event findByServiceTnCompletedEventHandler findByServiceTnCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://iplanet.oss.hawaiiantel.com/ht-one", ResponseNamespace="http://iplanet.oss.hawaiiantel.com/ht-one", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceInformation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public serviceInformation[] findByCustomerAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string accountNumber) {
            object[] results = this.Invoke("findByCustomerAccount", new object[] {
                        accountNumber});
            return ((serviceInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void findByCustomerAccountAsync(string accountNumber) {
            this.findByCustomerAccountAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void findByCustomerAccountAsync(string accountNumber, object userState) {
            if ((this.findByCustomerAccountOperationCompleted == null)) {
                this.findByCustomerAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindByCustomerAccountOperationCompleted);
            }
            this.InvokeAsync("findByCustomerAccount", new object[] {
                        accountNumber}, this.findByCustomerAccountOperationCompleted, userState);
        }
        
        private void OnfindByCustomerAccountOperationCompleted(object arg) {
            if ((this.findByCustomerAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findByCustomerAccountCompleted(this, new findByCustomerAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://iplanet.oss.hawaiiantel.com/ht-one", ResponseNamespace="http://iplanet.oss.hawaiiantel.com/ht-one", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceInformation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public serviceInformation findByCircuitId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string circuitId) {
            object[] results = this.Invoke("findByCircuitId", new object[] {
                        circuitId});
            return ((serviceInformation)(results[0]));
        }
        
        /// <remarks/>
        public void findByCircuitIdAsync(string circuitId) {
            this.findByCircuitIdAsync(circuitId, null);
        }
        
        /// <remarks/>
        public void findByCircuitIdAsync(string circuitId, object userState) {
            if ((this.findByCircuitIdOperationCompleted == null)) {
                this.findByCircuitIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindByCircuitIdOperationCompleted);
            }
            this.InvokeAsync("findByCircuitId", new object[] {
                        circuitId}, this.findByCircuitIdOperationCompleted, userState);
        }
        
        private void OnfindByCircuitIdOperationCompleted(object arg) {
            if ((this.findByCircuitIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findByCircuitIdCompleted(this, new findByCircuitIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://iplanet.oss.hawaiiantel.com/ht-one", ResponseNamespace="http://iplanet.oss.hawaiiantel.com/ht-one", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ServiceInformation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public serviceInformation[] findByServiceTn([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string tn) {
            object[] results = this.Invoke("findByServiceTn", new object[] {
                        tn});
            return ((serviceInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void findByServiceTnAsync(string tn) {
            this.findByServiceTnAsync(tn, null);
        }
        
        /// <remarks/>
        public void findByServiceTnAsync(string tn, object userState) {
            if ((this.findByServiceTnOperationCompleted == null)) {
                this.findByServiceTnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindByServiceTnOperationCompleted);
            }
            this.InvokeAsync("findByServiceTn", new object[] {
                        tn}, this.findByServiceTnOperationCompleted, userState);
        }
        
        private void OnfindByServiceTnOperationCompleted(object arg) {
            if ((this.findByServiceTnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findByServiceTnCompleted(this, new findByServiceTnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://iplanet.oss.hawaiiantel.com/ht-one")]
    public partial class serviceInformation {
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string circuitIdField;
        
        private string statusField;
        
        private string accessTypeField;
        
        private string ipTypeField;
        
        private ipRange[] ipRangesField;
        
        private string[] networkElementsField;
        
        private string serviceTypeField;
        
        private string vlanField;
        
        private string meetPointField;
        
        private string tnField;
        
        private long downloadBandwidthField;
        
        private bool downloadBandwidthFieldSpecified;
        
        private long uploadBandwidthField;
        
        private bool uploadBandwidthFieldSpecified;
        
        private string productNameField;
        
        private string maxUpField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string circuitId {
            get {
                return this.circuitIdField;
            }
            set {
                this.circuitIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string accessType {
            get {
                return this.accessTypeField;
            }
            set {
                this.accessTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ipType {
            get {
                return this.ipTypeField;
            }
            set {
                this.ipTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ipRange[] ipRanges {
            get {
                return this.ipRangesField;
            }
            set {
                this.ipRangesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("networkElement", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] networkElements {
            get {
                return this.networkElementsField;
            }
            set {
                this.networkElementsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string vlan {
            get {
                return this.vlanField;
            }
            set {
                this.vlanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string meetPoint {
            get {
                return this.meetPointField;
            }
            set {
                this.meetPointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tn {
            get {
                return this.tnField;
            }
            set {
                this.tnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long downloadBandwidth {
            get {
                return this.downloadBandwidthField;
            }
            set {
                this.downloadBandwidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool downloadBandwidthSpecified {
            get {
                return this.downloadBandwidthFieldSpecified;
            }
            set {
                this.downloadBandwidthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long uploadBandwidth {
            get {
                return this.uploadBandwidthField;
            }
            set {
                this.uploadBandwidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uploadBandwidthSpecified {
            get {
                return this.uploadBandwidthFieldSpecified;
            }
            set {
                this.uploadBandwidthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string productName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string maxUp {
            get {
                return this.maxUpField;
            }
            set {
                this.maxUpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://iplanet.oss.hawaiiantel.com/ht-one")]
    public partial class ipRange {
        
        private string[] ipAddressesField;
        
        private string gatewayField;
        
        private string netmaskField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ipAddress", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] ipAddresses {
            get {
                return this.ipAddressesField;
            }
            set {
                this.ipAddressesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gateway {
            get {
                return this.gatewayField;
            }
            set {
                this.gatewayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string netmask {
            get {
                return this.netmaskField;
            }
            set {
                this.netmaskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void findByCustomerAccountCompletedEventHandler(object sender, findByCustomerAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findByCustomerAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findByCustomerAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void findByCircuitIdCompletedEventHandler(object sender, findByCircuitIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findByCircuitIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findByCircuitIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void findByServiceTnCompletedEventHandler(object sender, findByServiceTnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findByServiceTnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findByServiceTnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceInformation[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591